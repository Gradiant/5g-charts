imsDomain: "ims.mnc001.mcc001.3gppnetwork.org"
epcDomain: "openverso"
apnImsSubnet: 192.168.101.0/24

mariadb:
  image:
    tag: 10.9.3
    debug: true
  auth:
    rootPassword: ims
  primary:
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    persistence:
      enabled: false
    existingConfigmap: "kamailio-ims-mariadb-conf"
  hostname: mariadb
  initdbScriptsConfigMap: "kamailio-ims-mariadb-entrypoint"

epc:
  pcrfHostname: open5gs-pcrf-frdi
  upfHostname: open5gs-upf-gtpu

bind9:
  hostname: bind9
  replicaCount: 1
  podAnnotations: {}
  global:
    imageRegistry: ""
    imagePullSecrets: []
    storageClass: ""
  image:
    registry: docker.io
    repository: internetsystemsconsortium/bind9
    tag: 9.18
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false
  services:
    labels:
    dns:
      type: ClusterIP
      annotations: {}
      port: 53
    rndc:
      type: ClusterIP
      annotations: {}
      port: 953
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: false
  resources:
    requests: {}
    limits: {}
  persistence:
    enabled: true
    storageClass:
    accessMode: ReadWriteOnce
    size: 50Mi

kamailio:
  replicaCount: 1
  global:
    imageRegistry: ""
    imagePullSecrets: []
    storageClass: ""
  image:
    registry: docker.io
    repository: openverso/kamailio-ims
    tag: "5.3-dev"
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false
  pcscf:
    hostname: pcscf
    podAnnotations: {}
    containerSecurityContext:
      enabled: true
      runAsNonRoot: false
      privileged: true
      capabilities:
        add: ["NET_ADMIN"]
    services:
      labels:
      frdi:
        type: ClusterIP
        annotations: {}
        port: 3871
      sip:
        type: ClusterIP
        annotations: {}
        port: 5060
      ipsec:
        type: ClusterIP
        annotations: {}
        client:
          port: 5100
        server:
          port: 6100
    readinessProbe:
      enabled: false
    livenessProbe:
      enabled: false
    resources:
      requests: {}
      limits: {}
  icscf:
    hostname: icscf
    podAnnotations: {}
    services:
      labels:
      frdi:
        type: ClusterIP
        annotations: {}
        port: 3869
      sip:
        type: ClusterIP
        annotations: {}
        port: 4060
    readinessProbe:
      enabled: false
    livenessProbe:
      enabled: false
    resources:
      requests: {}
      limits: {}
  scscf:
    hostname: scscf
    podAnnotations: {}
    services:
      labels:
      frdi:
        type: ClusterIP
        annotations: {}
        port: 3870
      sip:
        type: ClusterIP
        annotations: {}
        port: 6060
    readinessProbe:
      enabled: false
    livenessProbe:
      enabled: false
    resources:
      requests: {}
      limits: {}

fhoss:
  hostname: fhoss
  replicaCount: 1
  podAnnotations: {}
  global:
    imageRegistry: ""
    imagePullSecrets: []
    storageClass: ""
  image:
    registry: docker.io
    repository: openverso/fhoss
    tag: "develop"
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false
  services:
    labels:
    frdi:
      type: ClusterIP
      annotations: {}
      port: 3868
    http:
      type: ClusterIP
      annotations: {}
      port: 8080
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: false
  resources:
    requests: {}
    limits: {}

rtpengine:
  replicaCount: 1
  hostname: rtpengine
  podAnnotations: {}
  gatewayHostname: open5gs-upf-gtpu
  portMaxRtp: 50000
  portMinRtp: 49000
  global:
    imageRegistry: ""
    imagePullSecrets: []
    storageClass: ""
  image:
    registry: docker.io
    repository: openverso/rtpengine
    tag: "9.4.1.1"
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false
  containerSecurityContext:
    enabled: true
    runAsNonRoot: false
    privileged: false
    capabilities:
      add: ["NET_ADMIN"]
  services:
    labels:
    ng:
      type: ClusterIP
      annotations: {}
      port: 2223
    rtp:
      clusterIP: None
      annotations: {}
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: false
  resources:
    requests: {}
    limits: {}
